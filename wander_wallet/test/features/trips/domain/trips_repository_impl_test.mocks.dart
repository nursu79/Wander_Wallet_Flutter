// Mocks generated by Mockito 5.4.6 from annotations
// in wander_wallet/test/features/trips/domain/trips_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wander_wallet/features/trips/data/trips_remote_data_source.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TripsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTripsRemoteDataSource extends _i1.Mock
    implements _i3.TripsRemoteDataSource {
  MockTripsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  _i4.Future<_i2.Response<dynamic>> createTrip(
    String? name,
    String? destination,
    num? budget,
    DateTime? startDate,
    DateTime? endDate,
    _i5.File? tripImage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createTrip, [
              name,
              destination,
              budget,
              startDate,
              endDate,
              tripImage,
            ]),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#createTrip, [
                  name,
                  destination,
                  budget,
                  startDate,
                  endDate,
                  tripImage,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getAllTrips() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTrips, []),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getAllTrips, []),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getPastTrips() =>
      (super.noSuchMethod(
            Invocation.method(#getPastTrips, []),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getPastTrips, []),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getCurrentTrips() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentTrips, []),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getCurrentTrips, []),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getPendingTrips() =>
      (super.noSuchMethod(
            Invocation.method(#getPendingTrips, []),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getPendingTrips, []),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getTrip(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTrip, [id]),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(this, Invocation.method(#getTrip, [id])),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> updateTrip(
    String? id,
    String? name,
    String? destination,
    num? budget,
    DateTime? startDate,
    DateTime? endDate,
    _i5.File? tripImage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTrip, [
              id,
              name,
              destination,
              budget,
              startDate,
              endDate,
              tripImage,
            ]),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#updateTrip, [
                  id,
                  name,
                  destination,
                  budget,
                  startDate,
                  endDate,
                  tripImage,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> deleteTrip(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTrip, [id]),
            returnValue: _i4.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#deleteTrip, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.Response<dynamic>>);
}
